version: '3.8'

services:
  redis:
    image: redis
    container_name: redis-server
    ports:
      - "6379:6379"   
    networks:
      - app-network
  api-gateway:
    image: api-gateway:dev  
    build:
      context: .
      dockerfile: apigateway/Dockerfile  
    ports:
      - "7000:8080"  
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - app-network

  identitymicroservice:
    image: identitymicroservice:dev  
    build:
      context: .
      dockerfile: musicapp.identity.identityservice/Dockerfile 
    ports:
      - "7001:8080"  
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - app-network

  musicmicroservice:
    image: musicmicroservice:dev  
    build:
      context: .
      dockerfile: musicapp.music.musicservice/Dockerfile  
    ports:
      - "7002:8080"  
    depends_on:
      - redis
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - app-network
  
  uiapp:
    build:
      context: ./musicapp.webui.react
      dockerfile: Dockerfile
    container_name: musicapp-ui
    ports:
      - "5173:5173"  # Vite'default port
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    stdin_open: true
    tty: true
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
